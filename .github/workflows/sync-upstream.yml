name: Sync fork and update AI list

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Get repository information
        id: repo
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.repos.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            core.setOutput('default_branch', data.default_branch);

            if (!data.parent) {
              core.setFailed('Repository does not have an upstream parent to sync from.');
              return;
            }

            core.setOutput('parent', data.parent.full_name);
            core.setOutput('parent_default_branch', data.parent.default_branch);
            core.info(`Syncing with ${data.parent.full_name}`);

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.repo.outputs.default_branch }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Configure Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Sync from upstream
        env:
          UPSTREAM_REPOSITORY: ${{ steps.repo.outputs.parent }}
          UPSTREAM_BRANCH: ${{ steps.repo.outputs.parent_default_branch }}
          DEFAULT_BRANCH: ${{ steps.repo.outputs.default_branch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote remove upstream 2>/dev/null || true
          git remote add upstream https://x-access-token:${GITHUB_TOKEN}@github.com/${UPSTREAM_REPOSITORY}.git
          git fetch upstream ${UPSTREAM_BRANCH}
          git checkout ${DEFAULT_BRANCH}
          git merge --ff-only upstream/${UPSTREAM_BRANCH}

      - name: Generate ai.txt from chatgpt.list
        run: python3 scripts/convert_chatgpt_to_ai.py

      - name: Commit updated ruleset
        run: |
          if ! git diff --quiet; then
            git add ai.txt
            git commit -m "chore: sync upstream and update ai list"
          fi

      - name: Push changes
        env:
          DEFAULT_BRANCH: ${{ steps.repo.outputs.default_branch }}
        run: git push origin ${DEFAULT_BRANCH}
